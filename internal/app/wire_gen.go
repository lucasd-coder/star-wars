// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/lucasd-coder/star-wars/config"
	"github.com/lucasd-coder/star-wars/internal/infra/api"
	"github.com/lucasd-coder/star-wars/internal/infra/repository"
	"github.com/lucasd-coder/star-wars/internal/pkg/mongodb"
	"github.com/lucasd-coder/star-wars/internal/service"
	"github.com/lucasd-coder/star-wars/pkg/cache"
)

// Injectors from wire.go:

func InitializePlanetRepository() *repository.PlanetRepository {
	configConfig := config.GetConfig()
	client := mongodb.GetClientMongoDB()
	planetRepository := repository.NewPlanetRepository(configConfig, client)
	return planetRepository
}

func InitializeCreatePlanetService() *service.CreatePlanetService {
	planetRepository := InitializePlanetRepository()
	createPlanetService := service.NewCreatePlanetService(planetRepository)
	return createPlanetService
}

func InitializeSwapiAPI() *api.SwapiAPI {
	swapiAPI := api.NewSwapiAPI()
	return swapiAPI
}

func InitializeSwapiIntegrationService() *service.SwapiIntegrationService {
	swapiAPI := InitializeSwapiAPI()
	cacheService := InitializeCacheService()
	swapiIntegrationService := service.NewSwapiIntegrationService(swapiAPI, cacheService)
	return swapiIntegrationService
}

func InitializeFindPlanetByIdService() *service.FindPlanetByIdService {
	swapiIntegrationService := InitializeSwapiIntegrationService()
	planetRepository := InitializePlanetRepository()
	findPlanetByIdService := service.NewFindPlanetByIdService(swapiIntegrationService, planetRepository)
	return findPlanetByIdService
}

func InitializeCacheService() *service.CacheService {
	client := cache.GetClient()
	cacheService := service.NewCacheService(client)
	return cacheService
}

func InitializeFindPlanetByNameService() *service.FindPlanetByNameService {
	swapiIntegrationService := InitializeSwapiIntegrationService()
	planetRepository := InitializePlanetRepository()
	findPlanetByNameService := service.NewFindPlanetByNameService(swapiIntegrationService, planetRepository)
	return findPlanetByNameService
}

func InitializeFindAllPlanetService() *service.FindAllPlanetService {
	swapiIntegrationService := InitializeSwapiIntegrationService()
	planetRepository := InitializePlanetRepository()
	findAllPlanetService := service.NewFindAllPlanetService(swapiIntegrationService, planetRepository)
	return findAllPlanetService
}

func InitializeDeletePlanetByIdService() *service.DeletePlanetByIdService {
	planetRepository := InitializePlanetRepository()
	deletePlanetByIdService := service.NewDeletePlanetByIdService(planetRepository)
	return deletePlanetByIdService
}
